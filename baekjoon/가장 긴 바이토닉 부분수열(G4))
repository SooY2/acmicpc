/*가장 긴 바이토닉 부분수열*/
#include <iostream>
#include <algorithm>
using namespace std;

int arr[1005];
int n,ans;
int dp1[1005];
int dp2[1005];

void input() {
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> arr[i];
	}
	return;
}

void slove() {
	dp1[1] = 1;
	for (int i = 2; i <= n; i++) {
		int max = -1;
		for (int j = i - 1; j >= 0; j--) {
			if (arr[i] > arr[j] && dp1[j] > max) {
				dp1[i] = dp1[j] + 1;
				max = dp1[j];
			}
		}
	}
	dp2[n] = 1;
	for (int i = n - 1; i >= 1; i--) {
		int max = -1;
		for (int j = i + 1; j <= n + 1; j++) {
			if (arr[i] > arr[j] && dp2[j] > max) {
				dp2[i] = dp2[j] + 1;
				max = dp2[j];
			}
		}
	}


	for (int i = 1; i <= n; i++) {
		dp2[i] += dp1[i];
		if (dp2[i] > ans) {
			ans = dp2[i];
		}
	}

	return;
}

void show() {
	cout << ans-1;
	return;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	input();
	slove();
	show();

	return 0;
}
