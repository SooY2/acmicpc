/*스타트와 링크
* 
* 조합으로~ 두개 나누고
* 만약 123, 456 일케 나눠지면 12+13+21+23+31+32 더한게 능력치
* 즉, 조합으로 나눈 팀 안에선 순열로 구해서 더하기!
* 차이 젤 작은게 답


*/
#include <iostream>
#include <vector>
#include <stdlib.h>
using namespace std;

int n;
int map[21][21];
vector<int> start;
vector<int> link;
int ch[21];
int ans = 10000000;
int hap,hap1, hap2;

void input() {
	cin >> n;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			cin >> map[i][j];
		}
	}

	return;
}

vector<int> vv;
int per(vector<int> v,int idx) {

	if (vv.size() == 2) {
		hap += map[vv[0]][vv[1]];
	}
	else {
		for (int i = 0; i < v.size(); i++) {
			vv.push_back(v[i]);
			per(v,i+1);
			vv.pop_back();
		}
	}
	return hap;
}


void com(int st) {
	if (start.size() == n / 2) {
		for (int i = 1; i <= n; i++) {
			if ((ch[i] == 0)) link.push_back(i);
		}
		/*
		cout << "start : ";
		for (int i = 0; i < start.size(); i++) {
			cout << start[i] << " ";
		}
		cout << "// link : ";
		for (int i = 0; i < start.size(); i++) {
			cout << link[i] << " ";
		}
		cout << "\n";*/
		hap = 0;
		hap1 = per(start, 0);
		hap = 0;
		hap2 = per(link, 0);
		int val= abs(hap1-hap2);
		if (val < ans) {
			ans = val;
		}
		link.clear();

	}
	else {
		for (int i = st; i <= n; i++) {
			ch[i] = 1;
			start.push_back(i);
			com(i + 1);
			ch[i] = 0;
			start.pop_back();
		}
	}
	return;
}

void slove() {
	com(1);
	return;
}
void show() {
	cout << ans;
	return;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	input();
	slove();
	show();

	return 0;
}
