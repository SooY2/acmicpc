/*10844 쉬운 계단 수

dp[자릿수][끝자리수] = 일때 계단수가 가능한 경우의 수

	0	1	2	3	4	5	6	7	8	9
1	0	1	1	1	1	1	1	1	1	1
2	1	1	2	2	2	2	2	2	2	1
3	1	3	3	4	4	4	4	4	3	2

dp[n][i]=dp[n-1][i-1]+dp[n-1][i+1];
*/
#include <iostream>
using namespace std;

long long dp[101][11];
int n;
long long sum;

void input() {
	cin >> n;
	for (int i = 2; i <= 10; i++) {
		dp[1][i] = 1;
	}
	for (int i = 2; i <= n; i++) {
		for (int j = 1; j <= 10; j++) {
			dp[i][j] = ((dp[i - 1][j - 1] % 1000000000) + (dp[i - 1][j + 1] % 1000000000) % 1000000000);
		}
	}

	for (int i = 1; i <= 10; i++) {
		sum += dp[n][i];
	}
	cout << sum%1000000000;

	return;
}

void slove() {

	return;
}
void show() {

	return;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	input();
	slove();
	show();

	return 0;
}
